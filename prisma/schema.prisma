generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("categories")
}

model Product {
  id          String      @id @default(uuid())
  name        String
  price       String
  description String
  banner      String
  categoryId  String      @map("category_id")
  ordersItens OrderItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  category Category @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Order {
  id          String      @id @default(uuid())
  name        String?
  table       Int
  status      Boolean     @default(false)
  draft       Boolean     @default(true)
  ordersItens OrderItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderItem {
  id        String @id @default(uuid())
  amount    Int
  orderId   String @map("order_id")
  productId String @map("product_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("orders_itens")
}
